{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"linear regression","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyObAktzZs9Nb4FVpfpsR0aZ"},"kernelspec":{"display_name":"Python 3","name":"python3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"cpITPIPs60W4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638173967321,"user_tz":-420,"elapsed":25315,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"baac9862-cf2e-4861-f184-50bdce65ac4f"},"source":["import numpy as np \n","import math\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import csv\n","import tensorflow as tf\n","from google.colab import drive \n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"94OrU3SXLdvO","executionInfo":{"status":"ok","timestamp":1638173974014,"user_tz":-420,"elapsed":311,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"1b682a2f-a606-424b-af29-1c08365e4f59"},"source":["print(tf.test.gpu_device_name()) #check if the GPU is enabled\n","!cat /proc/meminfo #Checking RAM available for your process"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/device:GPU:0\n","MemTotal:       13302924 kB\n","MemFree:         9430732 kB\n","MemAvailable:   12015844 kB\n","Buffers:          128532 kB\n","Cached:          2489956 kB\n","SwapCached:            0 kB\n","Active:          1360604 kB\n","Inactive:        2177772 kB\n","Active(anon):     767552 kB\n","Inactive(anon):     2492 kB\n","Active(file):     593052 kB\n","Inactive(file):  2175280 kB\n","Unevictable:           0 kB\n","Mlocked:               0 kB\n","SwapTotal:             0 kB\n","SwapFree:              0 kB\n","Dirty:              5068 kB\n","Writeback:             0 kB\n","AnonPages:        919812 kB\n","Mapped:           670860 kB\n","Shmem:              3216 kB\n","KReclaimable:     116508 kB\n","Slab:             172472 kB\n","SReclaimable:     116508 kB\n","SUnreclaim:        55964 kB\n","KernelStack:        6000 kB\n","PageTables:        10616 kB\n","NFS_Unstable:          0 kB\n","Bounce:                0 kB\n","WritebackTmp:          0 kB\n","CommitLimit:     6651460 kB\n","Committed_AS:    4222632 kB\n","VmallocTotal:   34359738367 kB\n","VmallocUsed:       47828 kB\n","VmallocChunk:          0 kB\n","Percpu:             1568 kB\n","AnonHugePages:      2048 kB\n","ShmemHugePages:        0 kB\n","ShmemPmdMapped:        0 kB\n","FileHugePages:         0 kB\n","FilePmdMapped:         0 kB\n","CmaTotal:              0 kB\n","CmaFree:               0 kB\n","HugePages_Total:       0\n","HugePages_Free:        0\n","HugePages_Rsvd:        0\n","HugePages_Surp:        0\n","Hugepagesize:       2048 kB\n","Hugetlb:               0 kB\n","DirectMap4k:      203584 kB\n","DirectMap2M:     6084608 kB\n","DirectMap1G:     9437184 kB\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":459},"id":"D49XxZCuR-2O","executionInfo":{"status":"ok","timestamp":1638173978274,"user_tz":-420,"elapsed":855,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"1864ea26-cecf-454b-cbe3-fb881625f08d"},"source":["data=pd.read_csv('gdrive/My Drive/house_price.csv')\n","print(data.head())\n","data.describe()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Unnamed: 0  X.1  X          id  ...      lat     long  sqft_living15  sqft_lot15\n","0           1    1  1  7129300520  ...  47.5112 -122.257           1340        5650\n","1           2    2  2  6414100192  ...  47.7210 -122.319           1690        7639\n","2           3    3  3  5631500400  ...  47.7379 -122.233           2720        8062\n","3           4    4  4  2487200875  ...  47.5208 -122.393           1360        5000\n","4           5    5  5  1954400510  ...  47.6168 -122.045           1800        7503\n","\n","[5 rows x 24 columns]\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>X.1</th>\n","      <th>X</th>\n","      <th>id</th>\n","      <th>price</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>sqft_living</th>\n","      <th>sqft_lot</th>\n","      <th>floors</th>\n","      <th>waterfront</th>\n","      <th>view</th>\n","      <th>condition</th>\n","      <th>grade</th>\n","      <th>sqft_above</th>\n","      <th>sqft_basement</th>\n","      <th>yr_built</th>\n","      <th>yr_renovated</th>\n","      <th>zipcode</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>sqft_living15</th>\n","      <th>sqft_lot15</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>21613.00000</td>\n","      <td>21613.00000</td>\n","      <td>21613.00000</td>\n","      <td>2.161300e+04</td>\n","      <td>2.159300e+04</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>2.161300e+04</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>10807.00000</td>\n","      <td>10807.00000</td>\n","      <td>10807.00000</td>\n","      <td>4.580302e+09</td>\n","      <td>5.400676e+05</td>\n","      <td>3.370842</td>\n","      <td>2.114757</td>\n","      <td>2079.899736</td>\n","      <td>1.510697e+04</td>\n","      <td>1.494309</td>\n","      <td>0.007542</td>\n","      <td>0.234303</td>\n","      <td>3.409430</td>\n","      <td>7.656873</td>\n","      <td>1788.390691</td>\n","      <td>291.509045</td>\n","      <td>1971.005136</td>\n","      <td>84.402258</td>\n","      <td>98077.939805</td>\n","      <td>47.560053</td>\n","      <td>-122.213896</td>\n","      <td>1986.552492</td>\n","      <td>12768.455652</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6239.28002</td>\n","      <td>6239.28002</td>\n","      <td>6239.28002</td>\n","      <td>2.876566e+09</td>\n","      <td>3.670742e+05</td>\n","      <td>0.930062</td>\n","      <td>0.770163</td>\n","      <td>918.440897</td>\n","      <td>4.142051e+04</td>\n","      <td>0.539989</td>\n","      <td>0.086517</td>\n","      <td>0.766318</td>\n","      <td>0.650743</td>\n","      <td>1.175459</td>\n","      <td>828.090978</td>\n","      <td>442.575043</td>\n","      <td>29.373411</td>\n","      <td>401.679240</td>\n","      <td>53.505026</td>\n","      <td>0.138564</td>\n","      <td>0.140828</td>\n","      <td>685.391304</td>\n","      <td>27304.179631</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00000</td>\n","      <td>1.00000</td>\n","      <td>1.00000</td>\n","      <td>1.000102e+06</td>\n","      <td>7.500000e+04</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>290.000000</td>\n","      <td>5.200000e+02</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>290.000000</td>\n","      <td>0.000000</td>\n","      <td>1900.000000</td>\n","      <td>0.000000</td>\n","      <td>98001.000000</td>\n","      <td>47.155900</td>\n","      <td>-122.519000</td>\n","      <td>399.000000</td>\n","      <td>651.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5404.00000</td>\n","      <td>5404.00000</td>\n","      <td>5404.00000</td>\n","      <td>2.123049e+09</td>\n","      <td>3.220000e+05</td>\n","      <td>3.000000</td>\n","      <td>1.750000</td>\n","      <td>1427.000000</td>\n","      <td>5.040000e+03</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","      <td>1190.000000</td>\n","      <td>0.000000</td>\n","      <td>1951.000000</td>\n","      <td>0.000000</td>\n","      <td>98033.000000</td>\n","      <td>47.471000</td>\n","      <td>-122.328000</td>\n","      <td>1490.000000</td>\n","      <td>5100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>10807.00000</td>\n","      <td>10807.00000</td>\n","      <td>10807.00000</td>\n","      <td>3.904930e+09</td>\n","      <td>4.500000e+05</td>\n","      <td>3.000000</td>\n","      <td>2.250000</td>\n","      <td>1910.000000</td>\n","      <td>7.618000e+03</td>\n","      <td>1.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","      <td>1560.000000</td>\n","      <td>0.000000</td>\n","      <td>1975.000000</td>\n","      <td>0.000000</td>\n","      <td>98065.000000</td>\n","      <td>47.571800</td>\n","      <td>-122.230000</td>\n","      <td>1840.000000</td>\n","      <td>7620.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>16210.00000</td>\n","      <td>16210.00000</td>\n","      <td>16210.00000</td>\n","      <td>7.308900e+09</td>\n","      <td>6.450000e+05</td>\n","      <td>4.000000</td>\n","      <td>2.500000</td>\n","      <td>2550.000000</td>\n","      <td>1.068800e+04</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>2210.000000</td>\n","      <td>560.000000</td>\n","      <td>1997.000000</td>\n","      <td>0.000000</td>\n","      <td>98118.000000</td>\n","      <td>47.678000</td>\n","      <td>-122.125000</td>\n","      <td>2360.000000</td>\n","      <td>10083.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>21613.00000</td>\n","      <td>21613.00000</td>\n","      <td>21613.00000</td>\n","      <td>9.900000e+09</td>\n","      <td>7.700000e+06</td>\n","      <td>33.000000</td>\n","      <td>8.000000</td>\n","      <td>13540.000000</td>\n","      <td>1.651359e+06</td>\n","      <td>3.500000</td>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>5.000000</td>\n","      <td>13.000000</td>\n","      <td>9410.000000</td>\n","      <td>4820.000000</td>\n","      <td>2015.000000</td>\n","      <td>2015.000000</td>\n","      <td>98199.000000</td>\n","      <td>47.777600</td>\n","      <td>-121.315000</td>\n","      <td>6210.000000</td>\n","      <td>871200.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Unnamed: 0          X.1  ...  sqft_living15     sqft_lot15\n","count  21613.00000  21613.00000  ...   21613.000000   21613.000000\n","mean   10807.00000  10807.00000  ...    1986.552492   12768.455652\n","std     6239.28002   6239.28002  ...     685.391304   27304.179631\n","min        1.00000      1.00000  ...     399.000000     651.000000\n","25%     5404.00000   5404.00000  ...    1490.000000    5100.000000\n","50%    10807.00000  10807.00000  ...    1840.000000    7620.000000\n","75%    16210.00000  16210.00000  ...    2360.000000   10083.000000\n","max    21613.00000  21613.00000  ...    6210.000000  871200.000000\n","\n","[8 rows x 23 columns]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"YmmGK15cKKxH","executionInfo":{"status":"ok","timestamp":1638173998146,"user_tz":-420,"elapsed":328,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"8edda473-18f8-4964-ab90-0626ca850d32"},"source":["data = data.dropna() # because the number of nan value is too small compared with total value so just drop\n","data.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>X.1</th>\n","      <th>X</th>\n","      <th>id</th>\n","      <th>price</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>sqft_living</th>\n","      <th>sqft_lot</th>\n","      <th>floors</th>\n","      <th>waterfront</th>\n","      <th>view</th>\n","      <th>condition</th>\n","      <th>grade</th>\n","      <th>sqft_above</th>\n","      <th>sqft_basement</th>\n","      <th>yr_built</th>\n","      <th>yr_renovated</th>\n","      <th>zipcode</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>sqft_living15</th>\n","      <th>sqft_lot15</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>2.159300e+04</td>\n","      <td>2.159300e+04</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>2.159300e+04</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","      <td>21593.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>10816.537721</td>\n","      <td>10816.537721</td>\n","      <td>10816.537721</td>\n","      <td>4.580609e+09</td>\n","      <td>5.400676e+05</td>\n","      <td>3.370676</td>\n","      <td>2.114667</td>\n","      <td>2079.857963</td>\n","      <td>1.510572e+04</td>\n","      <td>1.494234</td>\n","      <td>0.007549</td>\n","      <td>0.234243</td>\n","      <td>3.409438</td>\n","      <td>7.656833</td>\n","      <td>1788.414671</td>\n","      <td>291.443292</td>\n","      <td>1971.005882</td>\n","      <td>84.295512</td>\n","      <td>98077.938499</td>\n","      <td>47.560057</td>\n","      <td>-122.213905</td>\n","      <td>1986.529014</td>\n","      <td>12768.030751</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6234.283826</td>\n","      <td>6234.283826</td>\n","      <td>6234.283826</td>\n","      <td>2.876622e+09</td>\n","      <td>3.670742e+05</td>\n","      <td>0.929706</td>\n","      <td>0.770197</td>\n","      <td>918.365987</td>\n","      <td>4.143345e+04</td>\n","      <td>0.540035</td>\n","      <td>0.086557</td>\n","      <td>0.766301</td>\n","      <td>0.650660</td>\n","      <td>1.175250</td>\n","      <td>828.164388</td>\n","      <td>442.470447</td>\n","      <td>29.378560</td>\n","      <td>401.436238</td>\n","      <td>53.503490</td>\n","      <td>0.138574</td>\n","      <td>0.140826</td>\n","      <td>685.286456</td>\n","      <td>27313.000361</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000102e+06</td>\n","      <td>7.500000e+04</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>290.000000</td>\n","      <td>5.200000e+02</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>290.000000</td>\n","      <td>0.000000</td>\n","      <td>1900.000000</td>\n","      <td>0.000000</td>\n","      <td>98001.000000</td>\n","      <td>47.155900</td>\n","      <td>-122.519000</td>\n","      <td>399.000000</td>\n","      <td>651.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5419.000000</td>\n","      <td>5419.000000</td>\n","      <td>5419.000000</td>\n","      <td>2.123049e+09</td>\n","      <td>3.220000e+05</td>\n","      <td>3.000000</td>\n","      <td>1.750000</td>\n","      <td>1427.000000</td>\n","      <td>5.040000e+03</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","      <td>1190.000000</td>\n","      <td>0.000000</td>\n","      <td>1951.000000</td>\n","      <td>0.000000</td>\n","      <td>98033.000000</td>\n","      <td>47.471000</td>\n","      <td>-122.328000</td>\n","      <td>1490.000000</td>\n","      <td>5100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>10817.000000</td>\n","      <td>10817.000000</td>\n","      <td>10817.000000</td>\n","      <td>3.904931e+09</td>\n","      <td>4.500000e+05</td>\n","      <td>3.000000</td>\n","      <td>2.250000</td>\n","      <td>1910.000000</td>\n","      <td>7.620000e+03</td>\n","      <td>1.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","      <td>1560.000000</td>\n","      <td>0.000000</td>\n","      <td>1975.000000</td>\n","      <td>0.000000</td>\n","      <td>98065.000000</td>\n","      <td>47.571800</td>\n","      <td>-122.231000</td>\n","      <td>1840.000000</td>\n","      <td>7620.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>16215.000000</td>\n","      <td>16215.000000</td>\n","      <td>16215.000000</td>\n","      <td>7.308900e+09</td>\n","      <td>6.450000e+05</td>\n","      <td>4.000000</td>\n","      <td>2.500000</td>\n","      <td>2550.000000</td>\n","      <td>1.068700e+04</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>2210.000000</td>\n","      <td>560.000000</td>\n","      <td>1997.000000</td>\n","      <td>0.000000</td>\n","      <td>98118.000000</td>\n","      <td>47.678000</td>\n","      <td>-122.125000</td>\n","      <td>2360.000000</td>\n","      <td>10083.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>21613.000000</td>\n","      <td>9.900000e+09</td>\n","      <td>7.700000e+06</td>\n","      <td>33.000000</td>\n","      <td>8.000000</td>\n","      <td>13540.000000</td>\n","      <td>1.651359e+06</td>\n","      <td>3.500000</td>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>5.000000</td>\n","      <td>13.000000</td>\n","      <td>9410.000000</td>\n","      <td>4820.000000</td>\n","      <td>2015.000000</td>\n","      <td>2015.000000</td>\n","      <td>98199.000000</td>\n","      <td>47.777600</td>\n","      <td>-121.315000</td>\n","      <td>6210.000000</td>\n","      <td>871200.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Unnamed: 0           X.1  ...  sqft_living15     sqft_lot15\n","count  21593.000000  21593.000000  ...   21593.000000   21593.000000\n","mean   10816.537721  10816.537721  ...    1986.529014   12768.030751\n","std     6234.283826   6234.283826  ...     685.286456   27313.000361\n","min        1.000000      1.000000  ...     399.000000     651.000000\n","25%     5419.000000   5419.000000  ...    1490.000000    5100.000000\n","50%    10817.000000  10817.000000  ...    1840.000000    7620.000000\n","75%    16215.000000  16215.000000  ...    2360.000000   10083.000000\n","max    21613.000000  21613.000000  ...    6210.000000  871200.000000\n","\n","[8 rows x 23 columns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"3opMeUabBabD","executionInfo":{"status":"ok","timestamp":1638174012920,"user_tz":-420,"elapsed":855,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"f107aa8b-235a-49eb-dc7c-e492fefefc1a"},"source":["#data transformation\n","price = []\n","sqft_living = []\n","sqft_living15 = []\n","sqft_above = []\n","floors = []\n","condition =[]\n","for i in data.price:\n","  price.append(math.log(i))\n","for i in data.sqft_living:\n","  sqft_living.append(math.log(i))\n","for i in data.sqft_living15:\n","  sqft_living15.append(math.log(i))\n","for i in data.sqft_above:\n","  sqft_above.append(math.log(i))\n","for i in data.floors:\n","  floors.append(math.log(i))\n","for i in data.condition:\n","  condition.append(math.log(i))\n","\n","#convert from list type to array type\n","price = np.array(price)\n","condition = np.array(condition)\n","floors = np.array(floors)\n","sqft_living = np.array(sqft_living)\n","sqft_living15 = np.array(sqft_living15)\n","sqft_above = np.array(sqft_above)\n","#scatter plot\n","plt.scatter(sqft_living,price,c ='red')\n","plt.xlabel('sqft_living')\n","plt.ylabel('price')\n","plt.show()\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":314},"id":"92h2MVJmZHZa","executionInfo":{"status":"ok","timestamp":1638174016546,"user_tz":-420,"elapsed":1044,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"1fd2bcb3-4e90-40f1-8b8a-61b489bd2de0"},"source":["f = plt.figure()    \n","f, axes = plt.subplots(nrows = 2, ncols = 2, sharex=False, sharey = False)\n","norm=plt.Normalize(-27,27)\n","sc = axes[0][0].scatter(condition,price, marker = \"x\", norm=norm)\n","axes[0][0].set_xlabel('Condition')\n","\n","axes[0][1].scatter(sqft_living15,price, marker = 'o', norm=norm)\n","axes[0][1].set_xlabel('sqft_living15')\n","\n","axes[1][0].scatter(sqft_above,price, marker = '*', norm=norm)\n","axes[1][0].set_xlabel('sqft_above')\n","\n","axes[1][1].scatter(floors,price, marker = 's', norm=norm )\n","axes[1][1].set_xlabel('Floors')\n","plt.tight_layout()\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 4 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"R0Zv_FzhMQyO","executionInfo":{"status":"ok","timestamp":1638174019463,"user_tz":-420,"elapsed":501,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"51b6acfe-f894-4fb0-e930-a0e6007f7b6e"},"source":["box = [sqft_living,sqft_living15,sqft_above,floors,condition]\n","fig = plt.figure(figsize =(4, 3))\n","# Creating axes instance\n","ax = fig.add_axes([0, 0, 1, 1])\n","# Creating plot\n","bp = ax.boxplot(box)\n","# show plot\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 288x216 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-XsIXi1mJXE6","executionInfo":{"status":"ok","timestamp":1638174022042,"user_tz":-420,"elapsed":293,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"4a4453b5-5c5f-4d1e-ca38-41afff26d356"},"source":["# make X matrix\n","X =  np.column_stack([sqft_living,sqft_living15,sqft_above,floors,condition])\n","X =  np.hstack((np.ones((len(price), 1)), X))  # first column of X contains \"1\" to multiply with bias\n","\n","# matrix Y  \n","Y = np.column_stack([price])\n","\n","# matrix weight W  \n","W = np.array([0.,0.,0.,0.,0.,0.,]).reshape(-1,1) # - w1..w5 for 5 features and w0 for bias\n","\n","print(W)\n","print(X)\n","print(Y)\n","er =  np.dot(X,W) - Y\n","print(np.multiply(er,er))\n","print(er*er)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [0.]]\n","[[1.         7.07326972 7.20042489 7.07326972 0.         1.09861229]\n"," [1.         7.85166118 7.43248381 7.68248245 0.69314718 1.09861229]\n"," [1.         6.64639051 7.90838716 6.64639051 0.         1.09861229]\n"," ...\n"," [1.         6.92755791 6.92755791 6.92755791 0.69314718 1.09861229]\n"," [1.         7.37775891 7.25134498 7.37775891 0.69314718 1.09861229]\n"," [1.         6.92755791 6.92755791 6.92755791 0.69314718 1.09861229]]\n","[[12.30998211]\n"," [13.19561384]\n"," [12.10071213]\n"," ...\n"," [12.90445858]\n"," [12.89921983]\n"," [12.69158046]]\n","[[151.53565952]\n"," [174.12422459]\n"," [146.42723405]\n"," ...\n"," [166.52505124]\n"," [166.38987212]\n"," [161.07621461]]\n","[[151.53565952]\n"," [174.12422459]\n"," [146.42723405]\n"," ...\n"," [166.52505124]\n"," [166.38987212]\n"," [161.07621461]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8ds4xN2eK0kp","executionInfo":{"status":"ok","timestamp":1638174024960,"user_tz":-420,"elapsed":285,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"4f98f659-73a8-46c7-a0d9-1726d1084c42"},"source":[" print(\"Solving linear regression using linear algebra: w0,w1,..w5\")\n"," np.dot( np.dot(np.linalg.pinv(np.dot(np.transpose(X),X)),np.transpose(X)) , Y)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Solving linear regression using linear algebra: w0,w1,..w5\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[ 5.55565545],\n","       [ 0.68783795],\n","       [ 0.42749158],\n","       [-0.18216545],\n","       [ 0.2026224 ],\n","       [ 0.29283688]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEVSoTvk2Oip","executionInfo":{"status":"ok","timestamp":1638174317493,"user_tz":-420,"elapsed":1011,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"0710c8ea-aecc-409c-c595-cafc389214c1"},"source":["                                            # BUILDING THE LINEAR REGRESSION MODEL   \n","epochs = 1000  # The number of iterations to perform batch gradient descent\n","n = len(price) # Number of elements in each feature\n","learning_rate = 0.01160904\n","k=0\n","cost_list = []\n","cost_list.append(0)\n","W = np.array([0.,0.,0.,0.,0.,0.,]).reshape(-1,1) # - w1..w5 for 5 features and w0 for bias\n","# Performing Gradient Descent \n","for i in range(epochs): \n","    error =  np.dot(X,W) - Y\n","    cost_list.append( (0.5/n) * np.sum(np.multiply(error,error)) ) \n","    # take derivative\n","    D_w0 =   (1/n) * np.sum(error)                                        # Derivative wrt w0 - bias\n","    D_w1 =   (1/n) * np.sum(np.multiply(error, X[:,1].reshape(-1,1)))     # Derivative wrt w1 - feature 1: sqft_living\n","    D_w2 =   (1/n) * np.sum(np.multiply(error, X[:,2].reshape(-1,1)))     # Derivative wrt w2 - feature 2: sqft_living15\n","    D_w3 =   (1/n) * np.sum(np.multiply(error, X[:,3].reshape(-1,1)))     # Derivative wrt w3 - feature 3: sqft_above\n","    D_w4 =   (1/n) * np.sum(np.multiply(error, X[:,4].reshape(-1,1)))     # Derivative wrt w4 - feature 4: floors\n","    D_w5 =   (1/n) * np.sum(np.multiply(error, X[:,5].reshape(-1,1)))     # Derivative wrt w5 - feature 5: condition\n","    \n","    # Update weight and intercept\n","    W[0] -=  (learning_rate * D_w0)   \n","    W[1] -=  (learning_rate * D_w1) \n","    W[2] -=  (learning_rate * D_w2) \n","    W[3] -=  (learning_rate * D_w3) \n","    W[4] -=  (learning_rate * D_w4) \n","    W[5] -=  (learning_rate * D_w5) \n","  \n","    k=i+1\n","    # Breaking condition -- accepted error so do not need to loop 1000 times \n","    if abs(cost_list[k] - cost_list[k-1]) < 1e-5: break\n","\n","print(\"Number of iterations: \",k)\n","print(cost_list[k-1])\n","print(cost_list[k])\n","print(W)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of iterations:  741\n","0.09735540957721917\n","0.09734544413585995\n","[[ 0.17228628]\n"," [ 0.5456601 ]\n"," [ 0.71746086]\n"," [ 0.41681309]\n"," [-0.14848901]\n"," [ 0.26532082]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"VYBST8zMYWx8"},"source":["# New Section"]},{"cell_type":"markdown","metadata":{"id":"vGkvMTwtPB_v"},"source":["Min value of Cost function when running 1000 loops:\n","\n","---\n","\n","\n","cost_list[k-1]:  \n","0.0956453483306748\n","\n","---\n","\n","cost_list[k]:   \n","0.09564036642760902\n","\n","---\n","Weight maxtrix w0,w1..w5:    \n","[[ 0.20126769]\n"," [ 0.53775314]\n"," [ 0.74638578]\n"," [ 0.38319558]\n"," [-0.16283897]\n"," [ 0.30539369]]"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FdOEloh2Nto2","executionInfo":{"status":"ok","timestamp":1638174321289,"user_tz":-420,"elapsed":637,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"900438f5-8c25-4452-fcd0-c24ef35e27f4"},"source":["print(\"Predicted value: \", W[0] + W[1]*sqft_living.mean() + W[2]*sqft_living15.mean() + W[3]*sqft_above.mean() + W[4]*2 + W[5]*3)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted value:  [13.28272589]\n"]}]},{"cell_type":"markdown","metadata":{"id":"15jFjyI5PuFu"},"source":["Predicted value when running 1000 loops: 13.31300619  "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"n0vyK4QNqg7n","executionInfo":{"status":"ok","timestamp":1638174323769,"user_tz":-420,"elapsed":345,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"52d05ad6-172b-411c-d8c9-2506f1b2e7de"},"source":["plt.title('Cost Function J', size = 20)\n","plt.xlabel('No. of iterations', size=15)\n","plt.ylabel('Cost', size=15)\n","plt.plot(cost_list)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5bAe-TsHudNh","executionInfo":{"status":"ok","timestamp":1638165230677,"user_tz":-420,"elapsed":293,"user":{"displayName":"Cầm Lê Đức","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17152391132836560607"}},"outputId":"d980bbf3-c8d1-4ded-da24-dfc602a20647"},"source":["        #Linear regression with sklearn -- no log transformation\n","from sklearn import linear_model\n","x_reg = data[[ 'sqft_living','sqft_living15','sqft_above','floors','condition']]\n","y_reg = data['price']\n","regr = linear_model.LinearRegression()\n","regr.fit(x_reg, y_reg)\n","print('coeficient: ',regr.coef_)\n","print('intercept: ',regr.intercept_)\n","print('')\n","print('predict:',round(sum(regr.predict([[data.sqft_living.mean(),data.sqft_living15.mean(),data.sqft_above.mean(),2,3]]))))\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["coeficient:  [ 2.63263721e+02  8.09165268e+01 -4.33015299e+01  3.79601891e+04\n","  4.98966260e+04]\n","intercept:  -317626.35481815063\n","\n","predict: 538837\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}]}]}